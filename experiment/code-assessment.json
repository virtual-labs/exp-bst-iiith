{
    "version": 1,
    "experiment name": "Experiment Name",
    "problems": [
        {
            "problem name": "Binary Search Tree",
            "description": "You are given the list of edges of a directed Binary search tree and the root node along with a target node. Find if the target node exists in the tree.",
            "inputs": [
                [[3,2], [2,1], [3,4], [4,5], [4,6]],
                1,
                5
            ],
            "expected": false,
            "inputs description": "Input consists of an array of edges -inp1 as [node1, node2]. The other input is the root node - inp2 and the target node - inp3",
            "expected description": "An array of nodes in the correct order of visitation",
            "difficulty": "beginner"
        },
        {
            "problem name": "Validate Binary Search Tree",
            "description": "Given a list of values representing a binary search tree, determine if it is a valid BST. In a binary search tree, for every node, the left subtree contains only nodes with values less than the node's value, and the right subtree contains only nodes with values greater than the node's value.",
            "inputs": [
                [10, 5, 15, 1, 7, 12, 20]
            ],
            "expected": true,
            "inputs description": "An array of integers representing the values to construct a binary search tree. Nodes are sequentially placed in an array, with each node at index i having its left child at 2i + 1 and its right child at 2i + 2.",
            "expected description": "A boolean indicating whether the given tree is a valid binary search tree.",
            "difficulty": "intermediate"
        }

    ]
}